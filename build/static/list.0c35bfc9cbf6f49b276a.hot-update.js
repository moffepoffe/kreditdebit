webpackHotUpdate("list",{

/***/ "./packages/f1/src/components/list/list-item.js":
/*!******************************************************!*\
  !*** ./packages/f1/src/components/list/list-item.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @emotion/styled-base */ \"./node_modules/@emotion/styled-base/dist/styled-base.browser.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! frontity */ \"./node_modules/frontity/dist/src/index.js\");\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(frontity__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _frontity_components_link__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @frontity/components/link */ \"./node_modules/@frontity/components/link.tsx\");\n/* harmony import */ var _featured_media__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../featured-media */ \"./packages/f1/src/components/featured-media.js\");\n/* harmony import */ var _frontity_components_image__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @frontity/components/image */ \"./node_modules/@frontity/components/image.tsx\");\n/* harmony import */ var _emotion_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @emotion/core */ \"./node_modules/@emotion/core/dist/core.browser.esm.js\");\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__(){return\"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}/**\n * Item Component\n *\n * It renders the preview of a blog post. Each blog post contains\n * - Title: clickable title of the post\n * - Author: name of author and published date\n * - FeaturedMedia: the featured image/video of the post\n */var Item=(_ref)=>{var{state,item}=_ref;var data=state.source.get(state.router.link);var author=state.source.author[item.author];var date=new Date(item.date);var isJobs=data.isAwsmJobOpeningsArchive;var readMoreLabel='LÃ¤s mer';if(isJobs){readMoreLabel='More Details';}return Object(_emotion_core__WEBPACK_IMPORTED_MODULE_6__[\"jsx\"])(react__WEBPACK_IMPORTED_MODULE_1___default.a.Fragment,null,!isJobs&&Object(_emotion_core__WEBPACK_IMPORTED_MODULE_6__[\"jsx\"])(Article,null,state.theme.featured.showOnList&&Object(_emotion_core__WEBPACK_IMPORTED_MODULE_6__[\"jsx\"])(_featured_media__WEBPACK_IMPORTED_MODULE_4__[\"default\"],{id:item.featured_media}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_6__[\"jsx\"])(\"div\",{className:\"bio-info\"},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_6__[\"jsx\"])(PublishDate,null,\" \",date.toDateString())),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_6__[\"jsx\"])(_frontity_components_link__WEBPACK_IMPORTED_MODULE_3__[\"default\"],{className:\"article-title\",link:item.link},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_6__[\"jsx\"])(Title,{dangerouslySetInnerHTML:{__html:item.title.rendered}})),item.excerpt&&Object(_emotion_core__WEBPACK_IMPORTED_MODULE_6__[\"jsx\"])(Excerpt,{dangerouslySetInnerHTML:{__html:item.excerpt.rendered}}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_6__[\"jsx\"])(_frontity_components_link__WEBPACK_IMPORTED_MODULE_3__[\"default\"],{className:\"redmore-btn\",link:item.link},readMoreLabel,\"...\")),isJobs&&Object(_emotion_core__WEBPACK_IMPORTED_MODULE_6__[\"jsx\"])(Article,{className:\"job-article col-12 col-md-6 col-lg-4 align-self-strech\"},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_6__[\"jsx\"])(\"div\",{className:\"job-box\"},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_6__[\"jsx\"])(_frontity_components_link__WEBPACK_IMPORTED_MODULE_3__[\"default\"],{className:\"job-title\",link:item.link},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_6__[\"jsx\"])(\"h4\",{dangerouslySetInnerHTML:{__html:item.title.rendered}})),item.excerpt&&Object(_emotion_core__WEBPACK_IMPORTED_MODULE_6__[\"jsx\"])(Excerpt,{dangerouslySetInnerHTML:{__html:item.excerpt.rendered}}),isJobs&&item.awsm_in_specs&&Object(_emotion_core__WEBPACK_IMPORTED_MODULE_6__[\"jsx\"])(\"div\",{dangerouslySetInnerHTML:{__html:item.awsm_in_specs}}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_6__[\"jsx\"])(_frontity_components_link__WEBPACK_IMPORTED_MODULE_3__[\"default\"],{className:\"brand-btnhollow\",link:item.link},readMoreLabel,\" \",Object(_emotion_core__WEBPACK_IMPORTED_MODULE_6__[\"jsx\"])(\"svg\",{width:\"14px\",height:\"9px\",viewBox:\"0 0 14 9\",version:\"1.1\",xmlns:\"http://www.w3.org/2000/svg\"},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_6__[\"jsx\"])(\"g\",{id:\"Symbols\",stroke:\"none\",strokeWidth:\"1\",fillRule:\"evenodd\"},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_6__[\"jsx\"])(\"g\",{id:\"Icons/Right-arrow\",transform:\"translate(0.000000, -2.000000)\",fillRule:\"nonzero\"},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_6__[\"jsx\"])(\"g\",{id:\"interface\",transform:\"translate(0.000000, 2.000000)\"},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_6__[\"jsx\"])(\"path\",{d:\"M13.7823071,3.98623766 L9.90356292,0.21135247 C9.61303376,-0.0713855917 9.14311798,-0.0703331717 8.85392477,0.213820214 C8.56476866,0.497937309 8.56588194,0.957481922 8.85641109,1.24025627 L11.460152,3.77419318 L0.742187132,3.77419318 C0.332277179,3.77419318 -3.09974268e-13,4.09913691 -3.09974268e-13,4.5 C-3.09974268e-13,4.90086317 0.332277179,5.2258069 0.742187132,5.2258069 L11.4601149,5.2258069 L8.8564482,7.75974381 C8.56591905,8.04251816 8.56480577,8.50206277 8.85396188,8.78617987 C9.14315509,9.07036955 9.61310798,9.07134938 9.90360003,8.78864761 L13.7816762,5.01445194 C14.0730218,4.73004453 14.0720941,4.26901201 13.7823071,3.98623766 Z\",id:\"Path\"})))))))));};// Connect the Item to gain access to `state` as a prop\n/* harmony default export */ __webpack_exports__[\"default\"] = (Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"connect\"])(Item));var Article=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"article\",{target:\"e18hzt7j0\",label:\"Article\"})( false?undefined:{name:\"1qf6jf1\",styles:\"max-width:771px;margin:0 auto;position:relative;margin-bottom:3.5rem;.bio-info{margin-bottom:1rem;img{border-radius:50%;margin-right:0.5rem;}}.article-title{&:hover{h1{color:var(--brand);}}}.redmore-btn{color:var(--brand);transition:all .3s ease;&:hover{color:var(--black);}}&.job-article{max-width:100%;margin:0;margin-bottom:2rem;display:flex;flex-direction:column;.job-box{padding:2rem;background:var(--white);box-shadow:0px 2px 16px -9px rgba(0,0,0,0.5);border:1px solid #ececec;border-radius:5px;transition:all .3s ease;display:flex;flex-grow:1;flex-direction:column;.job-title{text-decoration:none;h4{transition:all .3s ease;}&:hover{h4{color:var(--brand);}}}.brand-btnhollow{margin:auto auto 0 0;color:var(--brand);transition:all .3s ease;svg{fill:var(--black);transition:all .3s ease;}&:hover{color:var(--black);svg{fill:var(--brand);}}}.awsm-job-specification-wrapper{margin-bottom:0.5rem;.awsm-job-specification-job-category{.awsm-job-specification-term{&:before{content:'';background-image:url(\\\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='14' height='14' viewBox='0 0 24 24'%3E%3Cpath d='M12.23 15.5c-6.801 0-10.367-1.221-12.23-2.597v9.097h24v-8.949c-3.218 2.221-9.422 2.449-11.77 2.449zm1.77 2.532c0 1.087-.896 1.968-2 1.968s-2-.881-2-1.968v-1.032h4v1.032zm-14-8.541v-2.491h24v2.605c0 5.289-24 5.133-24-.114zm9-7.491c-1.104 0-2 .896-2 2v2h2v-1.5c0-.276.224-.5.5-.5h5c.276 0 .5.224.5.5v1.5h2v-2c0-1.104-.896-2-2-2h-6z'/%3E%3C/svg%3E\\\");width:14px;height:14px;position:relative;display:inline-block;margin-right:0.5rem;}}margin-bottom:0.2rem;}.awsm-job-specification-job-location{.awsm-job-specification-term{&:before{content:'';background-image:url(\\\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='14' height='14' viewBox='0 0 24 24'%3E%3Cpath d='M12 0c-4.198 0-8 3.403-8 7.602 0 4.198 3.469 9.21 8 16.398 4.531-7.188 8-12.2 8-16.398 0-4.199-3.801-7.602-8-7.602zm0 14c-3.314 0-6-2.686-6-6s2.686-6 6-6 6 2.686 6 6-2.686 6-6 6z'/%3E%3C/svg%3E\\\");width:14px;height:14px;position:relative;display:inline-block;margin-right:0.5rem;}}}}&:hover{box-shadow:0 5px 20px 0 rgba(0,0,0,.23);}}}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var Title=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"h1\",{target:\"e18hzt7j1\",label:\"Title\"})( false?undefined:{name:\"gqr3wm\",styles:\"font-size:2rem;margin-bottom:1.5rem;color:var(--black);box-sizing:border-box;transition:all .3s ease;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var AuthorName=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"span\",{target:\"e18hzt7j2\",label:\"AuthorName\"})( false?undefined:{name:\"14uo7y2\",styles:\"color:var(--black);font-size:1rem;margin-right:1rem;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var StyledLink=/*#__PURE__*/Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_frontity_components_link__WEBPACK_IMPORTED_MODULE_3__[\"default\"],{target:\"e18hzt7j3\",label:\"StyledLink\"})( false?undefined:{name:\"qar1bk\",styles:\"padding:15px 0;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var PublishDate=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"span\",{target:\"e18hzt7j4\",label:\"PublishDate\"})( false?undefined:{name:\"1q80jur\",styles:\"color:var(--gray);font-size:0.875rem;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var Excerpt=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"e18hzt7j5\",label:\"Excerpt\"})( false?undefined:{name:\"11gqtoi\",styles:\"line-height:1.6em;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/f1/src/components/list/list-item.js\n");

/***/ })

})